// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyStoreApi.Models;

namespace MyStoreApi.Migrations
{
    [DbContext(typeof(MyStoreContext))]
    partial class MyStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MyStoreApi.Models.Customer", b =>
                {
                    b.Property<long>("customerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address");

                    b.Property<string>("contact");

                    b.Property<string>("name");

                    b.HasKey("customerID");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("MyStoreApi.Models.Order", b =>
                {
                    b.Property<long>("orderID")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("customerID");

                    b.Property<int>("invoice");

                    b.HasKey("orderID");

                    b.HasIndex("customerID");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("MyStoreApi.Models.OrderItem", b =>
                {
                    b.Property<long>("orderItemID")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("orderID");

                    b.Property<long>("productID");

                    b.Property<int>("quantity");

                    b.HasKey("orderItemID");

                    b.ToTable("orderItems");
                });

            modelBuilder.Entity("MyStoreApi.Models.Product", b =>
                {
                    b.Property<long>("productID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description");

                    b.Property<int>("unitInStock");

                    b.Property<decimal>("unitPrice");

                    b.HasKey("productID");

                    b.ToTable("products");
                });

            modelBuilder.Entity("MyStoreApi.Models.Order", b =>
                {
                    b.HasOne("MyStoreApi.Models.Customer", "customers")
                        .WithMany("order")
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
